<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Locked" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>(Default)</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.Localizable" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.GridSize" type="System.Drawing.Size, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 8</value>
  </data>
  <data name="$this.DrawGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.Name">
    <value>xplhalMgrBase</value>
  </data>
  <data name="$this.TrayHeight" type="System.Int32, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>80</value>
  </data>
  <data name="$this.SnapToGrid" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Assembly</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lJTW1t6EhLWEhLWEhLWEhLWMjK2MjJxra2tSUlKtra3Ozt6EhLVKSlqUlJQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADn5+fv7+f////GxsZjY2NaWlpaWlrOzs7///////////////8AAADn5+eU
        lJRKSkpra2v///////97e3uMjIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///+UlJTv7+f/
        //////+EhIRSUlJCQkKEe3v////n5969vb3///8AAAD////e3t5SUlJKSkrn5+f///+EhISMjIwAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD////v597v596cnJz////37+fv597n3s5jY2M5OTl7e3Pv596clJRC
        QkL///8AAADv597v596Ee3s5OTnW1tbv596UjIyEhIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv59bn
        3s61raX37+cAAAAAAADv3tbn3s6Ee3tKSkrW1tbn3s6clJQ5OTnv7+cAAAD37+fn3s7GvbUpKSm9vb3n
        3s6UjISEe3sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADezr3ezr3e3t4AAAAAAAAAAADv7+fn1r2lnIyM
        jIz37+fezr2lnIwpKSne3t4AAAD////n1sa1raU5OTnv7+fezr2cjIRzc3MAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADWxq3v3tYAAAAAAAAAAAAAAAAAAADezr3GvbXv7+fv7+fWxq2llIQxMTHn5+cAAAD////e
        zr21pZRra2v37+fWxq2cjIRra2sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv594AAAAAAAAAAAAAAAAA
        AAAAAAD37+f37+cAAADv597WvZycjHMxMTHn5+cAAADn5+fGrZy1pYytra337+fOvZyllIRra2sAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv597GrYyUhGsx
        MTG9vb21tbWclJS9pYS1nIzGxsb37+fOrYyllIRaWloAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv3tbGpYSUhGtjY2OlpaWclJSUjIS9pYTOtZQAAAD37+fG
        pYScjHNSUlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADv3ta9nHutlISUlJScnJyUlJStlIS9nHvWxq0AAAD37+e9nHucjHOUlJQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv3ta9lHu1nIylpZylnJStlIS9lHvG
        pYz37+cAAAD37+e9lHucjHOlpaUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADv3ta9pYS9nHvGnITGpYTGpYTGpYTWxq0AAAAAAAD37+fGpYS1pYze3t4AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD37+fWvaXWvZzO
        vZzWvZzOvZzezr0AAAAAAAAAAAAAAADWxrXn3s4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv7+fv597n3s7v3s73794AAAAAAAAAAAAAAAAAAAD3
        7+cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//////////////wf/zP4Bx4j8AMOA/ACDAPwAgRD8AAAQ/CCAEPw4gDD8P8Aw/D/gMBw/4AAEP/AA
        BD/wAAA/8AAAP/gAQD/wAEA/wABAP8MAQD/HAEA/z4BAP9+QQD//8AA///AEP//wBD//8AQ///AMP//w
        Hn//+D7//////w==
</value>
  </data>
</root>