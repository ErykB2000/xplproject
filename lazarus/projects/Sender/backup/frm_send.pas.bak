unit frm_send;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs,
  StdCtrls,uXPLMessage, ExtCtrls, Grids, Menus, Buttons, EditBtn, uxPLSettings;

type

  { Tfrm_xpl_sender }

  Tfrm_xpl_sender = class(TForm)
    procedure BtnAboutClick(Sender: TObject);
    procedure BtnClearClick(Sender: TObject);
    procedure BtnCloseClick(Sender: TObject);
    procedure BtnLoadClick(Sender: TObject);
    procedure BtnSaveClick(Sender: TObject);
    procedure BtnSendClick(Sender: TObject);
    procedure edtSourceButtonClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure StringGridEditingDone(Sender: TObject);

  private
    { private declarations }




  public
    { public declarations }
  end; 

var
  frm_xpl_sender: Tfrm_xpl_sender;

implementation { Tfrm_xpl_sender ==============================================}
uses frm_about, uxPLMsgHeader, uxPLAddress, uxPLSchema, cUtils;

function Tfrm_xpl_sender.Object2Screen: boolean;
var i : integer;
begin
   result := false;

   cbMsgType.ItemIndex := Ord(x.MessageType);
   edtSource.Text := x.Source.Tag;
   edtTarget.Text := x.Target.Tag;

   edtSchemaClasse.Text := x.Schema.Classe;
   edtSchemaType.Text   := x.Schema.sType;

   StringGrid.RowCount := x.Body.ItmCount + 2;
   for i:=0 to x.Body.ItmCount-1 do begin
            StringGrid.Cells[0,i+1] := x.Body.Keys[i];
            StringGrid.Cells[1,i+1] := x.Body.Values[i];
   end;

   result := true;
end;


initialization
  {$I frm_send.lrs}

end.

